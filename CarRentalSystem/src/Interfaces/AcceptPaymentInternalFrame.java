/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import ClassFiles.Booking;
import ClassFiles.Customer;
import ClassFiles.DBConnect;
import ClassFiles.Payment;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Vince Lance
 */
public class AcceptPaymentInternalFrame extends javax.swing.JInternalFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    String model2 = null;
    int row = -1;
    int bid;
    int cid;
    String regNo;
    String type;
    Date sDate;
    public AcceptPaymentInternalFrame() {
        initComponents();
        con = DBConnect.connect();
        LoaddTable();
        Date d = new Date();
        rdate.setMinSelectableDate(d);
    }
    
    public void LoaddTable(){
    
        try {
            String sql = "select bid as Booking_ID,c.name as Customer_Name,b.customerId as Customer_ID,vt.typeName as Vehicle_Type,v.regNumber ,StartDate as Start_Date,endDate as End_Date,charge as Charge from booking b, customer c, vehicletype vt, vehicle v where b.vehicleId=v.vehicleId AND b.vehicleId!=0 AND vt.vtId=b.vtId AND b.customerId=c.customerId AND b.bid NOT IN (select rId from bookingpayment)";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            System.out.println(e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rdate = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        ac = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setBorder(null);
        setMaximumSize(new java.awt.Dimension(1166, 522));
        setMinimumSize(new java.awt.Dimension(1166, 522));
        getContentPane().setLayout(null);

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(54, 21, 1052, 311);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jButton1.setText("Calculate Charge");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(413, 369, 125, 21);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Return Date");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 370, 64, 13);

        rdate.setDateFormatString("yyyy-MM-dd");
        getContentPane().add(rdate);
        rdate.setBounds(177, 369, 133, 22);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Additional Charges");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(54, 411, 102, 13);

        ac.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        ac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acActionPerformed(evt);
            }
        });
        getContentPane().add(ac);
        ac.setBounds(177, 408, 133, 19);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/new.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setMaximumSize(new java.awt.Dimension(1166, 522));
        jLabel3.setMinimumSize(new java.awt.Dimension(1166, 522));
        jLabel3.setPreferredSize(new java.awt.Dimension(1166, 522));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 4, 1190, 610);

        setBounds(-5, -35, 1195, 647);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        row = jTable1.getSelectedRow();
        bid = (int)jTable1.getValueAt(row, 0);
        cid = (int)jTable1.getValueAt(row, 2);
        regNo = jTable1.getValueAt(row, 4).toString();
        type = jTable1.getValueAt(row, 3).toString();
        String sd = jTable1.getValueAt(row, 5).toString();
        try {  
            sDate=new SimpleDateFormat("yyyy-MM-dd").parse(sd);
        } catch (ParseException ex) {
            Logger.getLogger(AcceptPaymentInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(sDate);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        row = jTable1.getSelectedRow();
        if(row !=-1){
            Date rDate = rdate.getDate();
            String adc = ac.getText();
            if(rDate==null)
            {
                JOptionPane.showMessageDialog(null, "Please Select a Return Date");
            } 
            else if(sDate.after(rDate))
            {
                JOptionPane.showMessageDialog(null, "Invalid Return Date");
            }    
            else
            {    
                double addcharges;
                if(adc.isEmpty())
                {
                    addcharges = 0;
                }
                else
                {    
                    addcharges = Double.parseDouble(ac.getText());
                }    
                Payment pay = new Payment(bid, rDate);
                try {
                    pay.CalculateCharge(type, sDate,addcharges);
                } catch (SQLException ex) {
                    Logger.getLogger(AcceptPaymentInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                double chrg = pay.getCharge();
                int points = (int) (chrg/100);
                int x = JOptionPane.showConfirmDialog(null,"The Total Charge is Rs. "+pay.getCharge()+" Do You Want to Proceed with the payment?");
                if(x==0)
                {
                    try {
                        pay.AddPayment();
                        pay.Accept(regNo);
                        Customer c = new Customer();
                        c.setCid(cid);
                        c.FindCustomerPointBalance();
                        c.UpdateCustomerPoints(cid, points);
                        LoaddTable();
                    } catch (SQLException ex) {
                        Logger.getLogger(AcceptPaymentInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Select a Booking to Accept From the List");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void acActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ac;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JDateChooser rdate;
    // End of variables declaration//GEN-END:variables
}
